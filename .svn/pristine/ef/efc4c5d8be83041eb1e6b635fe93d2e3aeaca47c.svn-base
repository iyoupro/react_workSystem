import React, { Component } from 'react';
import styles from './StepChartPage.css';
import NodeChart from '../components/NodeChart';
const initialChartData =[{
  id: "0",
  data: "a",
  parent: [],
  children: [{
    id: "1" 
  }],
  brother: [],
  shapeInfo: {
    nodeType: "rectangle",
    fillColor: "#fcffe6",
    textColor: "black",
    strokeColor: "gray",
    popupFillColor: "white",  
    popupTextColor: "black",
    selectedFillColor: "#1890ff",
    selectedTextColor: "white",
    selectedStrokeColor: "gray"
  }
},{
  id: "1",
  data: "b",
  parent: [{
    "id": "0" 
  }],
  children: [],
  brother: [],
  shapeInfo: {
    nodeType: "ellipse",
    fillColor: "#fcffe6",
    textColor: "black",
    strokeColor: "gray",
    popupFillColor: "white",
    popupTextColor: "black",
    selectedFillColor: "#1890ff",
    selectedTextColor: "white",
    selectedStrokeColor: "gray"
  }
}]

class StepChartPage extends Component {
  onChange = (chartData) => {
    console.log(chartData);
  }

  onSelect = (selectedNode) => {
    console.log(selectedNode);
  }

  render() {
    return (
      <div className={styles.App} >
        <NodeChart
          onChange={this.onChange}
          onSelect={this.onSelect}
          initialChartData={initialChartData}
          mode="stepChart"
          nodeSize={50} // 节点大小占容器大小的百分比
          textPos={38} //  文字的距节点顶部的百分比
          nodeShadow={false}   //所有节点是否有阴影
          style={{ 
            // 流程的box
            height: "80%", width: "30%", fontSize: "12px", boxShadow:"none", background: 'grey'
          }}
          rowDistance={0.75} // 节点大小的倍数
          colDistance={0.1} // 节点大小的倍数
        />
      </div>
    );
  }
}

export default StepChartPage;
