import React, { memo, useState } from 'react';
import { DragDropWrapper, SortableList } from '../components/SortableList'
import styles from './SortablePage.less'

const listValue1 = [
  {
    type: '1',
    title: '1',
    key: '1',
  },
  {
    type: '2',
    title: '2',
    key: '2',
  },
  {
    type: '3',
    title: '3',
    key: '3',
  },
  {
    type: '4',
    title: '4',
    key: '4',
  },
  {
    type: '5',
    title: '5',
    key: '5',
  },
  {
    type: '6',
    title: '6',
    key: '6',
  }
];

const listValue2 = [
  {
    type: 'a',
    title: 'a',
    key: 'a',
  },
  {
    type: 'b',
    title: 'b',
    key: 'b',
  },
  {
    type: 'c',
    title: 'c',
    key: 'c',
  },
  {
    type: 'd',
    title: 'd',
    key: 'd',
  },
  {
    type: 'e',
    title: 'e',
    key: 'e',
  },
  {
    type: 'f',
    title: 'f',
    key: 'f',
  }
];

const initListData = { 
  value: {
    list1: listValue1,
    list2: listValue2,
  },
}

const Item = memo(props => {
  const { connectDragRef, connectDrag, connectDragHandle, connectDragStyle, 
    data, index, handleSelect, isDragging, isSelected } = props;
  const { type, title } = data;
  return (
    <div
      className={`${styles.item} ${isDragging ? styles.dragging : ''} ${isSelected ? styles.selected : ''}`}
      ref={connectDragRef}
      {...connectDrag}
      {...connectDragHandle}
      onClick={handleSelect}
    >
      {data.title}
    </div>
  );
})

const SortablePage = props => {
  const [listData, setListData] = useState(initListData);
  const direction = 'vertical'; // vertical horizontal
  const onListDataChange = newData => setListData(newData);
  // console.log('sortablePage: ', listData);
  return (
    <div className={`${styles.wrapper} ${direction === 'vertical' ? styles.vertical : styles.horizontal}`}> 
      <DragDropWrapper data={listData} onChange={onListDataChange} >
        <SortableList
          className={`${styles.list} ${direction === 'vertical' ? styles.vertical : styles.horizontal}`}
          direction={direction}
          listId='list1'
          data={listData}
          onChange={onListDataChange}
          ItemRender={Item}
        />
        <SortableList
          className={`${styles.list} ${direction === 'vertical' ? styles.vertical : styles.horizontal}`}
          direction={direction}
          listId='list2'
          data={listData}
          onChange={onListDataChange}
          ItemRender={Item}
        />
      </DragDropWrapper>
    </div>
  );
}

export default SortablePage;