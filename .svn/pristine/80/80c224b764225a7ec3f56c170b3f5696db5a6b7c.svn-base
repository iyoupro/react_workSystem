import { withState, withProps, compose } from "recompose";
import cloneDeep from 'lodash/cloneDeep';
import chartData from './chartData.json';

const initialChartData = chartData;
const initialSelectedNode = null;
const initialRenderInfo = {};
const initialNodeWidth = null;
const initialNodeSerialNumber = 2;
const initalModalState = 'close';

class RefsStore {
  store(name, value) {
    this[name] = value;
  }
}

export default compose(
  withState('chartData', 'updateChartData', ownProps => ownProps.initialChartData ? cloneDeep(ownProps.initialChartData) : cloneDeep(initialChartData)),
  withState('selectedNode', 'updateSelectedNode', initialSelectedNode),
  withState('nodeSerialNumber', 'updateNodeSerialNumber', initialNodeSerialNumber),
  withState('modalState', 'updateModalState', initalModalState),
  withProps(()=> {
    let chartWrapper = null;
    let chartView = null;
    return {
      getChartWrapper: () => ref => chartWrapper = ref,
      getChartView: () => ref => chartView = ref,
      getRefs: () => { return { chartWrapper, chartView } }
    }
  }),
);
