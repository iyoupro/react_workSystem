import React from 'react';
import './Popup.less';

const Popup = (props) => {
  return (
    <div className="popup">
      {props.mode === 'flowChart' && props.selectedNode &&
        <div className="popup-content-flowChart">
          { props.selectedNode.children.length > 0 && // 选中节点其下层节点不是分支
            <div
              className="popup-content-menu"
              onClick={
                () => {
                  const newNode = props.createNewNode(props.selectedNode);
                  props.flowChartUpdatePos();
                  props.renderNode('append');
                  props.renderNode('update');
                  props.selectNode(newNode.id);
                }
              }
            >
              新增节点
            </div>
          }
          { // 选中节点不是分支节点, 且其下层节点不是分支。
            props.selectedNode.brother.length === 0 && props.selectedNode.children.length === 1 &&
            <div
              className="popup-content-menu"
              onClick={
                () => {
                  props.createNewBranch(props.selectedNode, 2);
                  props.flowChartUpdatePos();
                  props.renderNode('append');
                  props.renderNode('update');
                  props.selectNone();
                }
              }
            >
              新增分支
            </div>
          }
          { // 选中节点不是分支节点并且其相邻的节点至少有一个不是分支节点。。
            props.selectedNode.brother.length === 0 && props.selectedNode.parent.length > 0 &&
            (props.selectedNode.children.length === 1 || props.selectedNode.parent.length === 1) &&
            <div
              className="popup-content-menu"
              onClick={
                () => {
                  props.deleteNode(props.selectedNode, 'deleteNode');
                  props.flowChartUpdatePos();
                  props.renderNode('exit');
                  props.renderNode('update');
                  props.selectNone(true);
                }
              }
            >
              删除节点
            </div>
          }
          {
            props.selectedNode.children.length > 1 && // 选中节点的下层节点为分支节点
            <div
              className="popup-content-menu"
              onClick={
                () => {
                  props.deleteNode(props.selectedNode, 'deleteBranch');
                  props.flowChartUpdatePos();
                  props.renderNode('exit');
                  props.renderNode('update');
                  props.selectNone(true);
                }
              }
            >
              删除分支
            </div>
          }
        </div>
      }
    </div>
  );
};

export default Popup;
