import React from 'react';
import ReactQuill, { Quill, Mixin, Toolbar } from 'react-quill';
import { withState, pipe, withHandlers } from '../rehook';
import 'react-quill/dist/quill.snow.css'; // ES6

// var Size = Quill.import('attributors/style/size');
// Size.whitelist = ['14px', '16px', '18px'];
// Quill.register(Size, true)

const enhance = pipe(
  withState('value', 'setValue', ''),
  withHandlers({
    onChange: ({ setValue }) => (value) => {
      setValue(value);
      console.log(value);
    }
  })
);

var toolbarOptions = [
  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
  ['blockquote', 'code-block'],

  [{ 'header': 1 }, { 'header': 2 }],               // custom button values
  [{ 'list': 'ordered' }, { 'list': 'bullet' }],
  [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
  [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
  [{ 'direction': 'rtl' }],                         // text direction

  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
  [{ 'font': [] }],
  [{ 'align': [] }],

  ['clean']                                         // remove formatting button
];

var toolbarOptions = [
  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
  ['blockquote', 'code-block'],

  [{ 'header': 1 }, { 'header': 2 }],               // custom button values
  [{ 'list': 'ordered' }, { 'list': 'bullet' }],
  [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
  [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
  [{ 'direction': 'rtl' }],                         // text direction

  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
  [{ 'font': [] }],
  [{ 'align': [] }],

  ['clean']                                         // remove formatting button
];

const CustomToolbar = () => (
  <div id="toolbar">
    <span className="ql-formats">
      <select className="ql-font">
        <option value="serif" />
        <option value="monospace" />
        <option value="Microsoft YaHei" />
        <option defaultValue />
      </select>
      <select className="ql-size">
        <option value="10">10px</option>
        <option value="10">20px</option>
      </select>
      <select className="ql-color" />
      <select className="ql-background" />
    </span>
    <span className="ql-formats">
      <select className="ql-header">
        <option value="1" />
        <option value="2" />
        <option value="3" />
        <option value="4" />
        <option value="5" />
        <option value="6" />
        <option defaultValue />
      </select>
    </span>
    <span className="ql-formats">
      <button className="ql-bold" />
      <button className="ql-italic" />
      <button className="ql-underline" />
      <button className="ql-strike" />
    </span>
    <span className="ql-formats">
      <button className="ql-list" value="ordered" />
      <button className="ql-list" value="bullet" />
    </span>
    <span className="ql-formats">
      <button className="ql-blockquote" />
      <button className="ql-code-block" />
    </span>
    <span className="ql-formats">
      <button className="ql-script" value="sub" />
      <button className="ql-script" value="super" />
    </span>
    <span className="ql-formats">
      <select className="ql-align" />
    </span>
    <span className="ql-formats">
      <button className="ql-link" />
      <button className="ql-image" />
      <button className="ql-video" />
    </span>
    <span className="ql-formats">
      <button className="ql-showhtml" />
    </span>
  </div>
);

const Test = ({ value, onChange }) => {
  return (<div>
    <CustomToolbar />
    <ReactQuill value={value} modules={
      // { toolbar: toolbarOptions }
      {
        toolbar: {
          container: '#toolbar',
        }
      }
    } style={{ margin: 20, height: 300 }}
      onChange={onChange} />
  </div>);
};

export default pipe(enhance, Test);
